#pragma once
#include "GameObject.h"

class EnemyBalls : public GameObject
{
public:
	/***************************************************************************
	[概要]
	事前にモデルの名前を保存

	[戻り値]
	void
	***************************************************************************/
	static void Load();

	/***************************************************************************
	[概要]
	事前に読み込んだものを解放
	
	[戻り値]
	void
	***************************************************************************/
	static void Unload() {};

	/***************************************************************************
	[概要]
	敵の初期化
	
	[戻り値]
	void
	***************************************************************************/
	void Init() override;

	/***************************************************************************
	[概要]
	敵の更新

	[戻り値]
	void
	***************************************************************************/
	void Update() override;

	/***************************************************************************
	[概要]
	ヒットストップ用の敵のアップデート

	[戻り値]
	void
	***************************************************************************/
	void HitStopUpdate() override;

	/***************************************************************************
	[概要]
	移動処理

	[戻り値]
	void
	***************************************************************************/
	void Move();

	/***************************************************************************
	[概要]
	オブジェクトを索敵

	[戻り値]
	void
	***************************************************************************/
	void SearchObject();

	/***************************************************************************
　　[概要]
　　移動速度を設定
　　
　　[戻り値]
　　void
　　***************************************************************************/
	void VelocitySetting();

	/***************************************************************************
	[概要]
	攻撃準備
	
	[戻り値]
	void
	***************************************************************************/
	void Charge();

	/***************************************************************************
　　[概要]
　　攻撃処理
　　
　　[戻り値]
　　void
　　***************************************************************************/
	void Attack();

	/***************************************************************************
	[概要]
	ゲーム開始時に、一定時間行う処理
	
	[戻り値]
	void
	***************************************************************************/
	void OnceProcess();

	/***************************************************************************
	[概要]
	SE(衝突音)を鳴らす
	
	[戻り値]
	void
	***************************************************************************/
	void CollisionSEPlay();

public:
	/***************************************************************************
	[概要]
	敵の数を取得
	
	[戻り値]
	int 現在の敵の数
	***************************************************************************/
	static int GetEnemyBallNum() { return m_EnemyNum; }

private:
	//----- 定数
	static const int m_EnemyNum  = 10;     // 敵の総数
	const float m_MaxAtkCoolTime = 3.0f;   // 攻撃のクールタイム
	const float m_MaxSearchTime  = 2.5f;   // 敵を索敵する間隔
	const float m_MaxChargeTime  = 1.0f;   // 最長攻撃準備時間

	class Audio* m_CollisionSE{};
	class Audio* m_ChargeSE{};
	class Audio* m_AttackSE{};
	class Collision* m_Collision{};
	class EnemyAttack* m_EnemyAttack{};
	class EnemyMove* m_EnemyMove{};
	class Effect_Charge* m_Effect_Charge;

	float m_SearchTime;   // オブジェクトを索敵する間隔
	float m_AtkCoolTime;  // 攻撃間隔
	float m_ChargeTime;   // 攻撃準備時間

	bool m_Dead        = false;   // 場外にいるか判定
	bool m_PlayerChase = false;   // プレイヤーに追跡するかどうか
	bool m_OnceProcess = false;   // 一度だけ行う処理を判定
};