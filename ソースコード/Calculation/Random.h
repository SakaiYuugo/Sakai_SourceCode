#pragma once

#include <random>

class Random
{
public:
	/***************************************************************************
	[概要]
	疑似乱数生成(メルセンヌ・ツイスター)
	
	[戻り値]
	void
	***************************************************************************/
	static void Init();

	/***************************************************************************
	[概要]
	int型の乱数を取得
	
	[戻り値]
	void
	***************************************************************************/
	static int GetInt();

	/***************************************************************************
	[概要]
	int型の乱数を指定範囲内で取得
	
	[引数]
	int const& min 取得乱数の最小値
	int const& max 取得乱数の最大値
	
	[戻り値]
	void
	***************************************************************************/
	static int GetInt(int const& min, int const& max);

	/***************************************************************************
	[概要]
	float型の乱数を取得

	[戻り値]
	void
	***************************************************************************/
	static float GetFloat();

	/***************************************************************************
	[概要]
	float型の乱数を指定範囲内で取得

	[引数]
	float const& min 取得乱数の最小値
	float const& max 取得乱数の最大値

	[戻り値]
	void
	***************************************************************************/
	static float GetFloat(float const& min, float const& max);

private:
	static std::mt19937 Generator;
};