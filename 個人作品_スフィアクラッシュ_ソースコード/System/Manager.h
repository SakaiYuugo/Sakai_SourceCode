#pragma once
#include "Scene.h"


class Manager
{
public:
	/***************************************************************************
	[概要]
	初期化処理

	[戻り値]
	void
	***************************************************************************/
	static void Init();

	/***************************************************************************
	[概要]
	メモリの解放処理

	[戻り値]
	void
	***************************************************************************/
	static void Uninit();

	/***************************************************************************
	[概要]
	更新処理

	[戻り値]
	void
	***************************************************************************/
	static void Update();

	/***************************************************************************
	[概要]
	描画処理

	[戻り値]
	void
	***************************************************************************/
	static void Draw();

	/***************************************************************************
	[概要]
	現在のシーンを取得

	[戻り値]
	class Scene
	***************************************************************************/
	static class Scene* GetScene() { return m_Scene; }

	/***************************************************************************
	[概要]
	新しいシーンを生成
	
	[戻り値]
	void
	***************************************************************************/
	template <typename T>
	static void SetScene()
	{
		if (m_Scene)
		{
			m_Scene->UninitBase();
			delete m_Scene;
		}

		m_Scene = new T();
		m_Scene->InitBase();
	}

private:
	static class Scene* m_Scene;
};
